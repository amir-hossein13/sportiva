    <>
      <div className="flex flex-col flex-wrap items-center sm:flex-row sm:justify-between">
        <div className="mb-10 sm:w-1/2">
          <img src="/public/img/blackSho.png" alt="" />
        </div>
        <div className="flex flex-col gap-5 sm:w-1/2">
          <h4 className="text-4xl font-bold whitespace-nowrap md:whitespace-break-spaces">
            کتانی آدیداس تورشن Adidas torsion Black
          </h4>
          <p className="text-sm text-gray-500">
            رویه این محصول ترکیبی از TPU , اشبالت است که ترکیبی از دوام و انعطاف پذیری و زیبایی را
            ارائه می دهد  TPU : ماده ای مقاوم در برابر سایش ، انعطاف پذیری و در عین حال مستحکم است
            که این ویژگی ها طول عمر کفش و راحتی را به ارمغان می آورد  اشبالت : نوعی چرم است که با
            سطح مخملی و نرم  جلوه ای کلاسیک و زیبا به کفش می بخشد و همچنین تنفس پذیری بالا یکی از
            ویژگی این نوع چرم است که باعث می شود در حین استفاده در روزمره ، پا بوی بدی نگیرد
          </p>
          <div className="flex flex-col gap-5">
            <select
              className="w-full rounded-lg border border-gray-400 text-right text-gray-500"
              name=""
              id=""
              value="انتخاب سایز"
            >
              <option value="" className="text-gray-300" disabled selected hidden>
                انتخاب سایز
              </option>
            </select>
            <select
              className="w-full rounded-lg border border-gray-400 text-right text-gray-500"
              name=""
              id=""
            >
              <option value="" className="text-gray-300" disabled selected hidden>
                انتخاب رنگ
              </option>
            </select>
          </div>
          <div className="mt-3 flex justify-between">
            <h4 className="text-2xl font-bold whitespace-nowrap">1,199,000 تومان</h4>
            <div>
              <HiOutlineHeart className="h-5 w-5" />
            </div>
          </div>
          <div className="flex justify-between">
            <button className="text-liteBule-100 bg-liteBule-300 w-1/2 rounded-xl px-5 py-2">
              سفارش
            </button>
            <div className="">counter</div>
          </div>
        </div>
      </div>
    </>



    import {
  HiOutlineViewGrid,
  HiOutlineUser,
  HiOutlineDocument,
  HiOutlineShoppingCart,
  HiOutlineShoppingBag,
  HiOutlineHeart,
  HiOutlineChat,
} from 'react-icons/hi';

function SideIconNav() {
  return (
    <div className="relative w-[95px] h-full">
      <svg
        width="100%"
        height="100%"
        viewBox="0 0 95 710"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        preserveAspectRatio="none"
      >
        <path
          d="M134 673.638C134 703.423 99.8924 720.323 76.1935 702.282L14.1935 655.081C5.25002 648.273 0 637.678 0 626.437V83.2658C0 72.0256 5.25009 61.4304 14.1936 54.6218L76.1936 7.42186C99.8925 -10.6199 134 6.28099 134 36.0659V673.638Z"
          fill="#86B6F6"
        />
      </svg>
      <div className="absolute top-0 left-0 w-full h-full flex flex-col justify-center items-center gap-6">
        <HiOutlineViewGrid className="h-6 w-6 text-white" />
        <HiOutlineUser className="h-6 w-6 text-white" />
        <HiOutlineDocument className="h-6 w-6 text-white" />
        <HiOutlineShoppingCart className="h-6 w-6 text-white" />
        <HiOutlineShoppingBag className="h-6 w-6 text-white" />
        <HiOutlineHeart className="h-6 w-6 text-white" />
        <HiOutlineChat className="h-6 w-6 text-white" />
      </div>
    </div>
  );
}

export default SideIconNav;





////////////////////////////


const onSubmit = (data: IFormInput) => {
    const formData = new FormData();
    formData.append('name', data.name || '');
    formData.append('price', String(data.price ?? 0));
    formData.append('discount', String(data.discount ?? 0));
    formData.append('finaleprice', String(finaleprice ?? 0));
    formData.append('color', data.color || '');
    formData.append('description', data.description || '');
    formData.append('quantity', String(data.quantity ?? 0));

    (data.categories || []).forEach((cat) => {
      formData.append('categories[]', String(cat));
    });

    // if data.photo is FileList (or array), pick first file
    if (data.photo && (data.photo as FileList).length > 0) {
      const file = (data.photo as FileList)[0];
      console.log('file object before append:', file);
      formData.append('photo', file);
    } else {
      console.log('no photo file found', data.photo);
    }

    // debug print of entries
    for (const pair of (formData as FormData).entries()) {
      console.log('FormData:', pair[0], pair[1]);
    }

    addProduct(formData, {
      onSuccess: () => {
        reset();
        console.log('success', formData);
      },
      onError: (err) => {
        console.log('error', err);
        console.log(formData);
      },
    });
  };